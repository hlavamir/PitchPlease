shader ReconstructPointCloud : ComputeFloat4
{
    compose ComputeFloat DepthData;
    compose ComputeFloat2 XYTableData;

    override float4 Compute()
    {
        float depth_data = DepthData.Compute() * 100; //why 100?
        float2 xy_table_data = XYTableData.Compute();

        float4 point_cloud_data = 1;
        if (depth_data != 0 && !isnan(xy_table_data.x) && !isnan(xy_table_data.y))
        {
            point_cloud_data.x = xy_table_data.x * depth_data;
            point_cloud_data.y = xy_table_data.y * depth_data;
            point_cloud_data.z = depth_data;
        }
        else
        {
            point_cloud_data.x = sqrt(-1);
            point_cloud_data.y = sqrt(-1);
            point_cloud_data.z = sqrt(-1);
        }

        return point_cloud_data;
    }
};

