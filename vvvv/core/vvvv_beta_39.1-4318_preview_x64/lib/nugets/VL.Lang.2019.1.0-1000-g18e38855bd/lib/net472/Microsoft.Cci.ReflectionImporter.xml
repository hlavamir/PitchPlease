<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Cci.ReflectionImporter</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Cci.ReflectionImporter.ReflectionMapper">
            <summary>
            An object that provides methods to map CCI metadata references to corresponding System.Type and System.Reflection.* objects.
            The object maintains a cache of mappings and should typically be used for doing many mappings.
            </summary>
        </member>
        <member name="M:Microsoft.Cci.ReflectionImporter.ReflectionMapper.#ctor(Microsoft.Cci.IMetadataHost)">
            <summary>
            An object that provides methods to map CCI metadata references to corresponding System.Type and System.Reflection.* objects.
            The object maintains a cache of mappings and should typically be used for doing many mappings.
            </summary>
        </member>
        <member name="M:Microsoft.Cci.ReflectionImporter.ReflectionMapper.GetAssembly(System.Reflection.Assembly)">
            <summary>
            
            </summary>
            <param name="assembly"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Cci.ReflectionImporter.ReflectionMapper.GetCustomAttribute(System.Reflection.CustomAttributeData)">
            <summary>
            
            </summary>
            <param name="customAttributeData"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Cci.ReflectionImporter.ReflectionMapper.GetCustomAttributes(System.Collections.Generic.IList{System.Reflection.CustomAttributeData})">
            <summary>
            
            </summary>
            <param name="customAttributeData"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Cci.ReflectionImporter.ReflectionMapper.GetEvent(System.Reflection.EventInfo)">
            <summary>
            
            </summary>
            <param name="eventInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Cci.ReflectionImporter.ReflectionMapper.GetExpression(System.Reflection.CustomAttributeTypedArgument)">
            <summary>
            
            </summary>
            <param name="argument"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Cci.ReflectionImporter.ReflectionMapper.GetExpression(System.Reflection.CustomAttributeNamedArgument)">
            <summary>
            
            </summary>
            <param name="argument"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Cci.ReflectionImporter.ReflectionMapper.GetField(System.Reflection.FieldInfo)">
            <summary>
            
            </summary>
            <param name="fieldInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Cci.ReflectionImporter.ReflectionMapper.GetFileReference(System.String,Microsoft.Cci.IAssembly,System.Boolean)">
            <summary>
            
            </summary>
            <param name="fileName"></param>
            <param name="containingAssembly"></param>
            <param name="hasMetadata"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Cci.ReflectionImporter.ReflectionMapper.GetMethod(System.Reflection.ConstructorInfo)">
            <summary>
            
            </summary>
            <param name="constructorInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Cci.ReflectionImporter.ReflectionMapper.GetMethod(System.Reflection.MethodInfo)">
            <summary>
            
            </summary>
            <param name="methodInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Cci.ReflectionImporter.ReflectionMapper.GetModule(System.Reflection.Module)">
            <summary>
            
            </summary>
            <param name="module"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Cci.ReflectionImporter.ReflectionMapper.GetParameter(System.Reflection.ParameterInfo)">
            <summary>
            
            </summary>
            <param name="parameterInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Cci.ReflectionImporter.ReflectionMapper.GetProperty(System.Reflection.PropertyInfo)">
            <summary>
            
            </summary>
            <param name="propertyInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Cci.ReflectionImporter.ReflectionMapper.GetType(System.Type)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Cci.ReflectionImporter.MethodInfoReferenceWrapper">
            <summary>
            This is for methodinfos obtained at call sites that call vararg methods with extra parameters
            </summary>
        </member>
        <member name="T:Microsoft.Cci.ReflectionImporter.VectorWrapper">
            <summary>
            Extends the interface list of the vector with the IReadOnly* interfaces introduced in .NET 4.5
            </summary>
        </member>
    </members>
</doc>
