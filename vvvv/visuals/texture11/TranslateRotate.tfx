//@author: vux
//@help: template for texture fx
//@tags: texture
//@credits: 

Texture2D texture2d : PREVIOUS;
float2 translate;
float rotate;

SamplerState linearSampler : IMMUTABLE
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Clamp;
    AddressV = Clamp;
};

struct psInput
{
	float4 p : SV_Position;
	float2 uv : TEXCOORD0;
};


float4 PS(psInput input) : SV_Target
{
	float2 pos = input.uv + translate;
	pos -= 0.5;
	
	float2 rot = float2(pos.x * cos(rotate) - pos.y * sin(rotate), pos.x * sin(rotate) + pos.y * cos(rotate));
	rot += 0.5;
	
	rot.x = rot.x % 1;
	rot.y = rot.y % 1;
	
	float4 c = texture2d.Sample(linearSampler, rot);
	return c;
}

technique10 Process
{
	pass P0
	{
		SetPixelShader(CompileShader(ps_4_0,PS()));
	}
}



